<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wechat.dao.returnDao">

	<select id="getreturnData" resultType="Map">
		select
		br.return_id,br.return_type,br.`status`,br.userId,
		date_format(br.create_date,'%Y-%m-%d') as create_date
		,uu.nickName,date_format(ro.create_time,'%Y-%m-%d')
		as
		order_date,ro.orderId,
		ro.totalmoney
		from b_return br inner join u_user
		uu on uu.openid = br.userId
		inner join r_order ro on
		ro.orderId=br.orderId where 1=1
		<if test="userId!= '' and userId!=null">
			and uu.userId=#{userId}
		</if>
		<if test="status!='' and status!=null">
			and br.status=#{status}
		</if>
		<if test="orderId!='' and orderId!=null">
			and ro.orderId =#{orderId}
		</if>
	</select>

	<select id="getreturnitem" resultType="Map">
		select
		bc.color_name,f.pic,bs.short_size,f.ColorID,f.Filed,
		oi.id,oi.orderId,oi.userId,oi.totalmoney,oi.orderstatus,oi.create_time,
		roi.goods_id,roi.order_id,roi.num,bg.goodslabel,bg.price from r_order
		oi INNER JOIN r_order_item roi
		on oi.orderId =roi.order_id inner join
		b_goods bg on bg.style_id=roi.goods_id
		inner join b_color bc on
		bc.short_color_id = roi.ColorID
		inner join b_size bs on
		bs.fieldname=roi.Filed and bs.short_size_class =
		roi.Size_class
		inner
		join f002 f on f.Goods_NO =roi.goods_id and f.ColorID=roi.ColorID and
		f.Filed=roi.Filed and
		f.Size_class =roi.Size_class
		where
		oi.orderstatus=#{arg0}
	</select>

	<!--獲取申请列表数据（如果id为60 的订单详情款进行退款申请，那么申请列表将不能再出现id为60的订单详情信息 然后后台去审核，小程序端显示的三个位置，一是申请列表，这个根据下面可以进行查询，二是处理中，根据退款单的 
		状态进行查询，三是处理成功，跟二是一样的查询 -->
	<select id="getminiprogramreturnitem" resultType="Map"
		parameterType="String">
		select C.* from
		(
		select * from
		(
		select
		bc.color_name,f.pic,bs.short_size,f.ColorID,f.Filed,roi.id
		,oi.orderId,oi.userId,oi.totalmoney,oi.orderstatus,oi.create_time,
		roi.goods_id,roi.num,bg.goodslabel,bg.price from r_order
		oi INNER JOIN
		r_order_item roi
		on oi.orderId =roi.order_id inner join
		b_goods bg on
		bg.style_id=roi.goods_id
		inner join b_color bc on
		bc.short_color_id =
		roi.ColorID
		inner join b_size bs on
		bs.fieldname=roi.Filed and
		bs.short_size_class =
		roi.Size_class
		inner
		join f002 f on f.Goods_NO
		=roi.goods_id and f.ColorID=roi.ColorID and
		f.Filed=roi.Filed and
		f.Size_class =roi.Size_class
		where oi.orderstatus='3' and (
		DATE_SUB(CURDATE(),
		INTERVAL 7 DAY) &lt;= date(oi.close_time))
		) A left
		join (
		select roi.id as itemid,order_id from r_order_item roi
		)B on
		A.orderId =B.order_id
		)C left join
		b_return ON C.id
		=b_return.orderdetailid
		where b_return.orderdetailid is null
		<if test="_parameter!= '' and _parameter!=null">
			and C.userId=#{_parameter}
		</if>
		GROUP BY C.id
	</select>


	<!-- 獲取申请列表数据（如果id为60 的订单详情款进行退款申请，那么申请列表将不能再出现id为60的订单详情信息 然后后台去审核，小程序端显示的三个位置，一是申请列表，这个根据下面可以进行查询，二是处理中，根据退款单的 
		状态进行查询，三是处理成功，跟二是一样的查询 ） select c.* from ( select * from ( select bc.color_name,f.pic,bs.short_size,f.ColorID,f.Filed,roi.id 
		,oi.orderId,oi.userId,oi.totalmoney,oi.orderstatus,oi.create_time, roi.goods_id,roi.num,bg.goodslabel,bg.price 
		from r_order oi INNER JOIN r_order_item roi on oi.orderId =roi.order_id inner 
		join b_goods bg on bg.style_id=roi.goods_id inner join b_color bc on bc.short_color_id 
		= roi.ColorID inner join b_size bs on bs.fieldname=roi.Filed and bs.short_size_class 
		= roi.Size_class inner join f002 f on f.Goods_NO =roi.goods_id and f.ColorID=roi.ColorID 
		and f.Filed=roi.Filed and f.Size_class =roi.Size_class where oi.orderstatus='3' 
		and ( DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(oi.create_time)) ) A 
		left join ( select roi.id as itemid,order_id from r_order_item roi )B on 
		A.orderId =B.order_id )C left join b_return ON C.id =b_return.orderdetailid 
		where b_return.orderdetailid is null -->

	<insert id="insertreturnitem">
		insert into
		b_return
		(return_id,orderId,orderdetailid,userId,status,return_detail,return_reason,order_time,return_type)
		VALUES
		(#{return_id},#{orderId},#{orderdetailid},#{userId},#{status},#{return_detail},#{return_reason},#{order_time},#{return_type})
	</insert>


	<select id="getreturnbystatus" resultType="Map">
		select rod.*, B.*,bc.color_name,bs.short_size,f.pic,bg.goodsLabel as
		goodslabel,(bg.price*B.num) as totalmoney,uu.nickName FROM
		(
		select
		A.*,roi.* FROM
		(
		SELECT * from b_return
		)A LEFT JOIN r_order_item roi on
		roi.id =A.orderdetailid
		)B LEFT JOIN
		b_color bc on bc.short_color_id =
		B.ColorID
		LEFT JOIN b_size bs on
		bs.fieldname =B.Filed and
		bs.short_size_class =B.Size_class
		LEFT JOIN
		f002 f on f.Goods_NO
		=B.goods_id and f.ColorID = B.ColorID
		and f.Filed = B.Filed and
		f.Size_class = B.Size_class
		LEFT JOIN u_user uu
		on uu.openid = B.userId
		LEFT JOIN b_goods bg on bg.style_id =
		B.goods_id
		LEFT JOIN
		r_order_delivery rod on rod.orderid = B.orderId
		where 1=1
		<if test="arg0!= '' and arg0!=null">
			and B.userId=#{arg0}
		</if>
		<if test="arg1!= '' and arg1!=null">
			and B.status =#{arg1}
		</if>
	</select>

	<update id="updatereturnstatus" parameterType="B_returnshop">
		update b_return
		SET
		status=#{status}
		where return_id=#{return_id}
	</update>
	
	<update id="updatereturntype1" parameterType="B_returnshop">
		update b_return
		SET
		return_type=#{return_type}
		where return_id=#{return_id}
	</update>
	
	
	

	<update id="updatereturntype" parameterType="B_returnshop">
		update b_return SET
		return_type=#{return_type} ,
		logistics_code=#{logistics_code} ,
		express_company=#{express_company} ,
		short_express_company=#{short_express_company}
		where
		return_id=#{return_id}
	</update>
	
	<!-- 修改销售数量 -->
	<update id="updategoodsnum" parameterType="goods" >
		update b_goods SET
		sales_volume=sales_volume-#{Quantity}
		where
		style_id=#{style_id}
	</update>

<!-- 修改库存数量 -->
	<update id="updatef002num" parameterType="goods" >
		update f002 SET
		Quantity=Quantity+ #{Quantity}
		where
		Goods_NO=#{style_id} and ColorID=#{ColorID} and Filed=#{Filed} and Size_class=#{size_class}
	</update>


	<delete id="delete_returnitem" parameterType="B_returnshop">
	 DELETE FROM b_return where return_id =#{return_id}
	</delete>


</mapper>